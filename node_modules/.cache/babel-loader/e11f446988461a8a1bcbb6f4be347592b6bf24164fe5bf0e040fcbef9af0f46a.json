{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/thomas/Documents/battleship/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/home/thomas/Documents/battleship/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2;import{useState,useEffect}from'react';import styled from'styled-components';import Gameboard from'../../factories/Gameboard';import Player from'../../factories/Player';import Board from'./Board';import EndScreen from'./EndScreen';import StartScreen from'./StartScreen';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Game=function Game(){var _useState=useState(new Player('User')),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(new Gameboard()),_useState4=_slicedToArray(_useState3,2),userGameboard=_useState4[0],setUserGameboard=_useState4[1];var _useState5=useState(new Player('Computer')),_useState6=_slicedToArray(_useState5,2),computer=_useState6[0],setComputer=_useState6[1];var _useState7=useState(new Gameboard()),_useState8=_slicedToArray(_useState7,2),computerGameboard=_useState8[0],setComputerGameboard=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),hasGameStarted=_useState10[0],setHasGameStarted=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isGameOver=_useState12[0],setIsGameOver=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),endScreenMessage=_useState14[0],setEndScreenMessage=_useState14[1];useEffect(function(){setupComputerGameboard();},[]);var setupComputerGameboard=function setupComputerGameboard(){var random=new Gameboard();random.placeShipsRandomly();setComputerGameboard(random);};var resetGame=function resetGame(){setUser(new Player('User'));setUserGameboard(new Gameboard());setComputer(new Player('Computer'));setupComputerGameboard();setHasGameStarted(false);setIsGameOver(false);};var handleFieldClick=function handleFieldClick(positionX,positionY){if(user.hasAlreadyHit(positionX,positionY))return;var userCopy=Object.assign(Object.create(Object.getPrototypeOf(user)),user);var computerCopy=Object.assign(Object.create(Object.getPrototypeOf(computer)),computer);var userGameboardCopy=Object.assign(Object.create(Object.getPrototypeOf(userGameboard)),userGameboard);var computerGameboardCopy=Object.assign(Object.create(Object.getPrototypeOf(computerGameboard)),computerGameboard);userCopy.attack(positionX,positionY,computerGameboardCopy);setUser(userCopy);setComputerGameboard(computerGameboardCopy);if(computerGameboard.isGameOver()){setEndScreenMessage('You won');setIsGameOver(true);return;}computerCopy.randomAttack(userGameboardCopy);setComputer(computerCopy);setUserGameboard(userGameboardCopy);if(userGameboard.isGameOver()){setEndScreenMessage('Computer won');setIsGameOver(true);return;}};return/*#__PURE__*/_jsxs(GameWrapper,{children:[hasGameStarted?'':/*#__PURE__*/_jsx(StartScreen,{gameboard:userGameboard,setUserGameboard:setUserGameboard,setHasGameStarted:setHasGameStarted}),isGameOver?/*#__PURE__*/_jsx(EndScreen,{message:endScreenMessage,resetGame:resetGame}):'',/*#__PURE__*/_jsxs(Boards,{children:[/*#__PURE__*/_jsx(Board,{gameboard:userGameboard,owner:user,enemy:computer}),/*#__PURE__*/_jsx(Board,{gameboard:computerGameboard,owner:computer,enemy:user,onFieldClick:handleFieldClick})]})]});};var GameWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 5rem;\\n  font-size: 5rem;\\n\\n  @media (max-width: 768px) {\\n    margin-top: 0;\\n  }\\n\"])));var Boards=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 5rem;\\n\\n  @media (max-width: 768px) {\\n    flex-direction: column;\\n  }\\n\"])));export default Game;","map":{"version":3,"names":["useState","useEffect","styled","Gameboard","Player","Board","EndScreen","StartScreen","jsx","_jsx","jsxs","_jsxs","Game","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","userGameboard","setUserGameboard","_useState5","_useState6","computer","setComputer","_useState7","_useState8","computerGameboard","setComputerGameboard","_useState9","_useState10","hasGameStarted","setHasGameStarted","_useState11","_useState12","isGameOver","setIsGameOver","_useState13","_useState14","endScreenMessage","setEndScreenMessage","setupComputerGameboard","random","placeShipsRandomly","resetGame","handleFieldClick","positionX","positionY","hasAlreadyHit","userCopy","Object","assign","create","getPrototypeOf","computerCopy","userGameboardCopy","computerGameboardCopy","attack","randomAttack","GameWrapper","children","gameboard","message","Boards","owner","enemy","onFieldClick","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sources":["/home/thomas/Documents/battleship/src/components/Game/Game.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Gameboard from '../../factories/Gameboard'\nimport Player from '../../factories/Player'\nimport Board from './Board'\nimport EndScreen from './EndScreen'\nimport StartScreen from './StartScreen'\n\nconst Game = () => {\n  const [user, setUser] = useState(new Player('User'))\n  const [userGameboard, setUserGameboard] = useState(new Gameboard())\n  const [computer, setComputer] = useState(new Player('Computer'))\n  const [computerGameboard, setComputerGameboard] = useState(new Gameboard())\n  const [hasGameStarted, setHasGameStarted] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n  const [endScreenMessage, setEndScreenMessage] = useState('')\n\n  useEffect(() => {\n    setupComputerGameboard()\n  }, [])\n\n  const setupComputerGameboard = () => {\n    const random = new Gameboard()\n    random.placeShipsRandomly()\n    setComputerGameboard(random)\n  }\n\n  const resetGame = () => {\n    setUser(new Player('User'))\n    setUserGameboard(new Gameboard())\n    setComputer(new Player('Computer'))\n    setupComputerGameboard()\n    setHasGameStarted(false)\n    setIsGameOver(false)\n  }\n\n  const handleFieldClick = (positionX: number, positionY: number) => {\n    if (user.hasAlreadyHit(positionX, positionY)) return\n\n    let userCopy: Player = Object.assign(\n      Object.create(Object.getPrototypeOf(user)),\n      user\n    )\n\n    let computerCopy: Player = Object.assign(\n      Object.create(Object.getPrototypeOf(computer)),\n      computer\n    )\n\n    let userGameboardCopy: Gameboard = Object.assign(\n      Object.create(Object.getPrototypeOf(userGameboard)),\n      userGameboard\n    )\n\n    let computerGameboardCopy: Gameboard = Object.assign(\n      Object.create(Object.getPrototypeOf(computerGameboard)),\n      computerGameboard\n    )\n\n    userCopy.attack(positionX, positionY, computerGameboardCopy)\n    setUser(userCopy)\n    setComputerGameboard(computerGameboardCopy)\n    if (computerGameboard.isGameOver()) {\n      setEndScreenMessage('You won')\n      setIsGameOver(true)\n      return\n    }\n\n    computerCopy.randomAttack(userGameboardCopy)\n    setComputer(computerCopy)\n    setUserGameboard(userGameboardCopy)\n    if (userGameboard.isGameOver()) {\n      setEndScreenMessage('Computer won')\n      setIsGameOver(true)\n      return\n    }\n  }\n\n  return (\n    <GameWrapper>\n      {hasGameStarted ? (\n        ''\n      ) : (\n        <StartScreen\n          gameboard={userGameboard}\n          setUserGameboard={setUserGameboard}\n          setHasGameStarted={setHasGameStarted}\n        />\n      )}\n      {isGameOver ? (\n        <EndScreen message={endScreenMessage} resetGame={resetGame} />\n      ) : (\n        ''\n      )}\n      <Boards>\n        <Board gameboard={userGameboard} owner={user} enemy={computer}></Board>\n        <Board\n          gameboard={computerGameboard}\n          owner={computer}\n          enemy={user}\n          onFieldClick={handleFieldClick}\n        ></Board>\n      </Boards>\n    </GameWrapper>\n  )\n}\n\nconst GameWrapper = styled.div`\n  margin-top: 5rem;\n  font-size: 5rem;\n\n  @media (max-width: 768px) {\n    margin-top: 0;\n  }\n`\nconst Boards = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5rem;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nexport default Game\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}