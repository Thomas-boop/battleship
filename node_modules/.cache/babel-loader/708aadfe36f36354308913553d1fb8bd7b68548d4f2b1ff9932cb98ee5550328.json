{"ast":null,"code":"class Player {\n  constructor(name) {\n    this.name = void 0;\n    this.alreadyHitCoords = void 0;\n    this.name = name;\n    this.alreadyHitCoords = [];\n  }\n  attack(positionX, positionY, gameboard) {\n    if (this.hasAlreadyHit(positionX, positionY)) return;\n    this.alreadyHitCoords.push([positionX, positionY]);\n    gameboard.receiveAttack(positionX, positionY);\n  }\n  randomAttack(gameboard) {\n    if (this.alreadyHitCoords.length === 100) return;\n    let positionX = Math.floor(Math.random() * 10);\n    let positionY = Math.floor(Math.random() * 10);\n    while (this.hasAlreadyHit(positionX, positionY)) {\n      positionX = Math.floor(Math.random() * 10);\n      positionY = Math.floor(Math.random() * 10);\n    }\n    this.alreadyHitCoords.push([positionX, positionY]);\n    gameboard.receiveAttack(positionX, positionY);\n  }\n  hasAlreadyHit(positionX, positionY) {\n    for (let i = 0; i < this.alreadyHitCoords.length; i++) {\n      if (this.alreadyHitCoords[i][0] === positionX && this.alreadyHitCoords[i][1] === positionY) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nexport default Player;","map":{"version":3,"names":["Player","constructor","name","alreadyHitCoords","attack","positionX","positionY","gameboard","hasAlreadyHit","push","receiveAttack","randomAttack","length","Math","floor","random","i"],"sources":["/home/thomas/Documents/battleship/src/factories/Player.ts"],"sourcesContent":["import Gameboard from './Gameboard'\n\nclass Player {\n  name: string\n  alreadyHitCoords: number[][]\n\n  constructor(name: string) {\n    this.name = name\n    this.alreadyHitCoords = []\n  }\n\n  attack(positionX: number, positionY: number, gameboard: Gameboard) {\n    if (this.hasAlreadyHit(positionX, positionY)) return\n\n    this.alreadyHitCoords.push([positionX, positionY])\n    gameboard.receiveAttack(positionX, positionY)\n  }\n\n  randomAttack(gameboard: Gameboard) {\n    if (this.alreadyHitCoords.length === 100) return\n\n    let positionX = Math.floor(Math.random() * 10)\n    let positionY = Math.floor(Math.random() * 10)\n\n    while (this.hasAlreadyHit(positionX, positionY)) {\n      positionX = Math.floor(Math.random() * 10)\n      positionY = Math.floor(Math.random() * 10)\n    }\n\n    this.alreadyHitCoords.push([positionX, positionY])\n    gameboard.receiveAttack(positionX, positionY)\n  }\n\n  hasAlreadyHit(positionX: number, positionY: number) {\n    for (let i = 0; i < this.alreadyHitCoords.length; i++) {\n      if (\n        this.alreadyHitCoords[i][0] === positionX &&\n        this.alreadyHitCoords[i][1] === positionY\n      ) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nexport default Player\n"],"mappings":"AAEA,MAAMA,MAAM,CAAC;EAIXC,WAAWA,CAACC,IAAY,EAAE;IAAA,KAH1BA,IAAI;IAAA,KACJC,gBAAgB;IAGd,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAC5B;EAEAC,MAAMA,CAACC,SAAiB,EAAEC,SAAiB,EAAEC,SAAoB,EAAE;IACjE,IAAI,IAAI,CAACC,aAAa,CAACH,SAAS,EAAEC,SAAS,CAAC,EAAE;IAE9C,IAAI,CAACH,gBAAgB,CAACM,IAAI,CAAC,CAACJ,SAAS,EAAEC,SAAS,CAAC,CAAC;IAClDC,SAAS,CAACG,aAAa,CAACL,SAAS,EAAEC,SAAS,CAAC;EAC/C;EAEAK,YAAYA,CAACJ,SAAoB,EAAE;IACjC,IAAI,IAAI,CAACJ,gBAAgB,CAACS,MAAM,KAAK,GAAG,EAAE;IAE1C,IAAIP,SAAS,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;IAC9C,IAAIT,SAAS,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;IAE9C,OAAO,IAAI,CAACP,aAAa,CAACH,SAAS,EAAEC,SAAS,CAAC,EAAE;MAC/CD,SAAS,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;MAC1CT,SAAS,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC;IAC5C;IAEA,IAAI,CAACZ,gBAAgB,CAACM,IAAI,CAAC,CAACJ,SAAS,EAAEC,SAAS,CAAC,CAAC;IAClDC,SAAS,CAACG,aAAa,CAACL,SAAS,EAAEC,SAAS,CAAC;EAC/C;EAEAE,aAAaA,CAACH,SAAiB,EAAEC,SAAiB,EAAE;IAClD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACb,gBAAgB,CAACS,MAAM,EAAEI,CAAC,EAAE,EAAE;MACrD,IACE,IAAI,CAACb,gBAAgB,CAACa,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKX,SAAS,IACzC,IAAI,CAACF,gBAAgB,CAACa,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKV,SAAS,EACzC;QACA,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;AACF;AAEA,eAAeN,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}