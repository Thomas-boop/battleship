{"ast":null,"code":"import _classCallCheck from\"/home/thomas/Documents/battleship/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/thomas/Documents/battleship/node_modules/@babel/runtime/helpers/esm/createClass.js\";import Ship from'./Ship';var SIZE=10;var Gameboard=/*#__PURE__*/function(){function Gameboard(){_classCallCheck(this,Gameboard);this.board=void 0;this.missedShots=void 0;this.board=[];this.missedShots=[];this.initialize();}_createClass(Gameboard,[{key:\"initialize\",value:function initialize(){for(var i=0;i<SIZE;i++){this.board[i]=[];this.missedShots[i]=[];for(var j=0;j<SIZE;j++){this.board[i][j]=null;this.missedShots[i][j]=false;}}}},{key:\"placeShip\",value:function placeShip(ship,row,column,isVertical){if(!this.isPlacementPossible(ship,row,column,isVertical))return false;if(isVertical){for(var i=0;i<ship.length;i++){this.board[row+i][column]=ship;}}else{for(var _i=0;_i<ship.length;_i++){this.board[row][column+_i]=ship;}}return true;}},{key:\"placeShipsRandomly\",value:function placeShipsRandomly(){if(!this.isEmpty())return;var ships=[];var carrier=new Ship(5);var battleship=new Ship(4);var destroyer=new Ship(3);var submarine=new Ship(3);var patrolBoat=new Ship(2);ships.push(carrier,battleship,destroyer,submarine,patrolBoat);var succesfulPlacements=0;while(succesfulPlacements<5){var row=Math.floor(Math.random()*10);var column=Math.floor(Math.random()*10);var isVertical=Math.floor(Math.random()*2)===1?true:false;if(this.placeShip(ships[succesfulPlacements],row,column,isVertical))succesfulPlacements++;}}},{key:\"isPlacementPossible\",value:function isPlacementPossible(ship,row,column,isVertical){// case position is out of gameboard\nif(row<0||row>SIZE-1||column<0||column>SIZE-1)return false;// case ship doesn't fit in gameboard\nif(isVertical){if(row+ship.length>SIZE)return false;}else{if(column+ship.length>SIZE)return false;}// case any of the fields is already taken\nif(isVertical){for(var i=0;i<ship.length;i++){if(this.board[row+i][column])return false;}}else{for(var _i2=0;_i2<ship.length;_i2++){if(this.board[row][column+_i2])return false;}}// case any of the neighbour fields are already taken\nif(isVertical){for(var _i3=0;_i3<ship.length;_i3++){for(var x=-1;x<=1;x++){for(var y=-1;y<=1;y++){if(row+x+_i3<0||row+x+_i3>=SIZE||column+y<0||column+y>=SIZE)continue;if(this.board[row+x+_i3][column+y])return false;}}}}else{for(var _i4=0;_i4<ship.length;_i4++){for(var _x=-1;_x<=1;_x++){for(var _y=-1;_y<=1;_y++){if(row+_x<0||row+_x>=SIZE||column+_y+_i4<0||column+_y+_i4>=SIZE)continue;if(this.board[row+_x][column+_y+_i4])return false;}}}}return true;}},{key:\"receiveAttack\",value:function receiveAttack(row,column){if(row<0||row>=SIZE||column<0||column>=SIZE){return false;}if(this.board[row][column]){var hitIndex=0;// is vertical\nif(column>0&&this.board[row][column-1]){var i=1;while(column-i>=0&&this.board[row][column-i]){hitIndex++;i++;}}// is horizontal\nelse if(row>0&&this.board[row-1][column]){var _i5=1;while(row-_i5>=0&&this.board[row-_i5][column]){hitIndex++;_i5++;}}this.board[row][column].hit(hitIndex);return true;}else{this.missedShots[row][column]=true;return false;}}},{key:\"isGameOver\",value:function isGameOver(){var isBoardEmpty=true;for(var i=0;i<SIZE;i++){for(var j=0;j<SIZE;j++){if(this.board[i][j]){isBoardEmpty=false;if(!this.board[i][j].isSunk()){return false;}}}}return isBoardEmpty?false:true;}},{key:\"isEmpty\",value:function isEmpty(){for(var i=0;i<SIZE;i++){for(var j=0;j<SIZE;j++){if(this.board[i][j]!==null)return false;}}return true;}},{key:\"getEmptyFieldsAmount\",value:function getEmptyFieldsAmount(){var result=0;for(var i=0;i<SIZE;i++){for(var j=0;j<SIZE;j++){if(this.board[i][j]===null)result++;}}return result;}}]);return Gameboard;}();export default Gameboard;","map":{"version":3,"names":["Ship","SIZE","Gameboard","_classCallCheck","board","missedShots","initialize","_createClass","key","value","i","j","placeShip","ship","row","column","isVertical","isPlacementPossible","length","placeShipsRandomly","isEmpty","ships","carrier","battleship","destroyer","submarine","patrolBoat","push","succesfulPlacements","Math","floor","random","x","y","receiveAttack","hitIndex","hit","isGameOver","isBoardEmpty","isSunk","getEmptyFieldsAmount","result"],"sources":["/home/thomas/Documents/battleship/src/factories/Gameboard.ts"],"sourcesContent":["import Ship from './Ship'\n\nconst SIZE = 10\n\nclass Gameboard {\n  board: Ship[][]\n  missedShots: boolean[][]\n\n  constructor() {\n    this.board = []\n    this.missedShots = []\n    this.initialize()\n  }\n\n  initialize() {\n    for (let i = 0; i < SIZE; i++) {\n      this.board[i] = []\n      this.missedShots[i] = []\n      for (let j = 0; j < SIZE; j++) {\n        this.board[i][j] = null\n        this.missedShots[i][j] = false\n      }\n    }\n  }\n\n  placeShip(ship: Ship, row: number, column: number, isVertical: boolean) {\n    if (!this.isPlacementPossible(ship, row, column, isVertical)) return false\n\n    if (isVertical) {\n      for (let i = 0; i < ship.length; i++) {\n        this.board[row + i][column] = ship\n      }\n    } else {\n      for (let i = 0; i < ship.length; i++) {\n        this.board[row][column + i] = ship\n      }\n    }\n    return true\n  }\n\n  placeShipsRandomly() {\n    if (!this.isEmpty()) return\n\n    const ships = []\n    const carrier = new Ship(5)\n    const battleship = new Ship(4)\n    const destroyer = new Ship(3)\n    const submarine = new Ship(3)\n    const patrolBoat = new Ship(2)\n    ships.push(carrier, battleship, destroyer, submarine, patrolBoat)\n\n    let succesfulPlacements = 0\n\n    while (succesfulPlacements < 5) {\n      const row = Math.floor(Math.random() * 10)\n      const column = Math.floor(Math.random() * 10)\n      const isVertical = Math.floor(Math.random() * 2) === 1 ? true : false\n\n      if (this.placeShip(ships[succesfulPlacements], row, column, isVertical))\n        succesfulPlacements++\n    }\n  }\n\n  isPlacementPossible(\n    ship: Ship,\n    row: number,\n    column: number,\n    isVertical: boolean\n  ) {\n    // case position is out of gameboard\n    if (row < 0 || row > SIZE - 1 || column < 0 || column > SIZE - 1)\n      return false\n\n    // case ship doesn't fit in gameboard\n    if (isVertical) {\n      if (row + ship.length > SIZE) return false\n    } else {\n      if (column + ship.length > SIZE) return false\n    }\n\n    // case any of the fields is already taken\n    if (isVertical) {\n      for (let i = 0; i < ship.length; i++) {\n        if (this.board[row + i][column]) return false\n      }\n    } else {\n      for (let i = 0; i < ship.length; i++) {\n        if (this.board[row][column + i]) return false\n      }\n    }\n\n    // case any of the neighbour fields are already taken\n    if (isVertical) {\n      for (let i = 0; i < ship.length; i++) {\n        for (let x = -1; x <= 1; x++) {\n          for (let y = -1; y <= 1; y++) {\n            if (\n              row + x + i < 0 ||\n              row + x + i >= SIZE ||\n              column + y < 0 ||\n              column + y >= SIZE\n            )\n              continue\n            if (this.board[row + x + i][column + y]) return false\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < ship.length; i++) {\n        for (let x = -1; x <= 1; x++) {\n          for (let y = -1; y <= 1; y++) {\n            if (\n              row + x < 0 ||\n              row + x >= SIZE ||\n              column + y + i < 0 ||\n              column + y + i >= SIZE\n            )\n              continue\n            if (this.board[row + x][column + y + i]) return false\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  receiveAttack(row: number, column: number) {\n    if (row < 0 || row >= SIZE || column < 0 || column >= SIZE) {\n      return false\n    }\n\n    if (this.board[row][column]) {\n      let hitIndex = 0\n      // is vertical\n      if (column > 0 && this.board[row][column - 1]) {\n        let i = 1\n        while (column - i >= 0 && this.board[row][column - i]) {\n          hitIndex++\n          i++\n        }\n      }\n      // is horizontal\n      else if (row > 0 && this.board[row - 1][column]) {\n        let i = 1\n        while (row - i >= 0 && this.board[row - i][column]) {\n          hitIndex++\n          i++\n        }\n      }\n      this.board[row][column].hit(hitIndex)\n      return true\n    } else {\n      this.missedShots[row][column] = true\n      return false\n    }\n  }\n\n  isGameOver() {\n    let isBoardEmpty = true\n    for (let i = 0; i < SIZE; i++) {\n      for (let j = 0; j < SIZE; j++) {\n        if (this.board[i][j]) {\n          isBoardEmpty = false\n          if (!this.board[i][j].isSunk()) {\n            return false\n          }\n        }\n      }\n    }\n    return isBoardEmpty ? false : true\n  }\n\n  isEmpty() {\n    for (let i = 0; i < SIZE; i++) {\n      for (let j = 0; j < SIZE; j++) {\n        if (this.board[i][j] !== null) return false\n      }\n    }\n    return true\n  }\n\n  getEmptyFieldsAmount() {\n    let result = 0\n    for (let i = 0; i < SIZE; i++) {\n      for (let j = 0; j < SIZE; j++) {\n        if (this.board[i][j] === null) result++\n      }\n    }\n    return result\n  }\n}\n\nexport default Gameboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}