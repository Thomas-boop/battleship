{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Documents/battleship-main/src/components/Game/Game.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Gameboard from '../../factories/Gameboard';\nimport Player from '../../factories/Player';\nimport Board from './Board';\nimport EndScreen from './EndScreen';\nimport StartScreen from './StartScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [user, setUser] = useState(new Player('User'));\n  const [userGameboard, setUserGameboard] = useState(new Gameboard());\n  const [computer, setComputer] = useState(new Player('Computer'));\n  const [computerGameboard, setComputerGameboard] = useState(new Gameboard());\n  const [hasGameStarted, setHasGameStarted] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [endScreenMessage, setEndScreenMessage] = useState('');\n  useEffect(() => {\n    setupComputerGameboard();\n  }, []);\n  const setupComputerGameboard = () => {\n    const random = new Gameboard();\n    random.placeShipsRandomly();\n    setComputerGameboard(random);\n  };\n  const resetGame = () => {\n    setUser(new Player('User'));\n    setUserGameboard(new Gameboard());\n    setComputer(new Player('Computer'));\n    setupComputerGameboard();\n    setHasGameStarted(false);\n    setIsGameOver(false);\n  };\n  const handleFieldClick = (positionX, positionY) => {\n    if (user.hasAlreadyHit(positionX, positionY)) return;\n    let userCopy = Object.assign(Object.create(Object.getPrototypeOf(user)), user);\n    let computerCopy = Object.assign(Object.create(Object.getPrototypeOf(computer)), computer);\n    let userGameboardCopy = Object.assign(Object.create(Object.getPrototypeOf(userGameboard)), userGameboard);\n    let computerGameboardCopy = Object.assign(Object.create(Object.getPrototypeOf(computerGameboard)), computerGameboard);\n    userCopy.attack(positionX, positionY, computerGameboardCopy);\n    setUser(userCopy);\n    setComputerGameboard(computerGameboardCopy);\n    if (computerGameboard.isGameOver()) {\n      setEndScreenMessage('You won');\n      setIsGameOver(true);\n      return;\n    }\n    computerCopy.randomAttack(userGameboardCopy);\n    setComputer(computerCopy);\n    setUserGameboard(userGameboardCopy);\n    if (userGameboard.isGameOver()) {\n      setEndScreenMessage('Computer won');\n      setIsGameOver(true);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameWrapper, {\n    children: [hasGameStarted ? '' : /*#__PURE__*/_jsxDEV(StartScreen, {\n      gameboard: userGameboard,\n      setUserGameboard: setUserGameboard,\n      setHasGameStarted: setHasGameStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), isGameOver ? /*#__PURE__*/_jsxDEV(EndScreen, {\n      message: endScreenMessage,\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(Boards, {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        gameboard: userGameboard,\n        owner: user,\n        enemy: computer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        gameboard: computerGameboard,\n        owner: computer,\n        enemy: user,\n        onFieldClick: handleFieldClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"soUqmmDNvioEynCY76HdlWDk2o4=\");\n_c = Game;\nconst GameWrapper = styled.div`\n  margin-top: 5rem;\n  font-size: 5rem;\n\n  @media (max-width: 768px) {\n    margin-top: 0;\n  }\n`;\n_c2 = GameWrapper;\nconst Boards = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5rem;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c3 = Boards;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"GameWrapper\");\n$RefreshReg$(_c3, \"Boards\");","map":{"version":3,"names":["useState","useEffect","styled","Gameboard","Player","Board","EndScreen","StartScreen","jsxDEV","_jsxDEV","Game","_s","user","setUser","userGameboard","setUserGameboard","computer","setComputer","computerGameboard","setComputerGameboard","hasGameStarted","setHasGameStarted","isGameOver","setIsGameOver","endScreenMessage","setEndScreenMessage","setupComputerGameboard","random","placeShipsRandomly","resetGame","handleFieldClick","positionX","positionY","hasAlreadyHit","userCopy","Object","assign","create","getPrototypeOf","computerCopy","userGameboardCopy","computerGameboardCopy","attack","randomAttack","GameWrapper","children","gameboard","fileName","_jsxFileName","lineNumber","columnNumber","message","Boards","owner","enemy","onFieldClick","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/home/thomas/Documents/battleship-main/src/components/Game/Game.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Gameboard from '../../factories/Gameboard'\nimport Player from '../../factories/Player'\nimport Board from './Board'\nimport EndScreen from './EndScreen'\nimport StartScreen from './StartScreen'\n\nconst Game = () => {\n  const [user, setUser] = useState(new Player('User'))\n  const [userGameboard, setUserGameboard] = useState(new Gameboard())\n  const [computer, setComputer] = useState(new Player('Computer'))\n  const [computerGameboard, setComputerGameboard] = useState(new Gameboard())\n  const [hasGameStarted, setHasGameStarted] = useState(false)\n  const [isGameOver, setIsGameOver] = useState(false)\n  const [endScreenMessage, setEndScreenMessage] = useState('')\n\n  useEffect(() => {\n    setupComputerGameboard()\n  }, [])\n\n  const setupComputerGameboard = () => {\n    const random = new Gameboard()\n    random.placeShipsRandomly()\n    setComputerGameboard(random)\n  }\n\n  const resetGame = () => {\n    setUser(new Player('User'))\n    setUserGameboard(new Gameboard())\n    setComputer(new Player('Computer'))\n    setupComputerGameboard()\n    setHasGameStarted(false)\n    setIsGameOver(false)\n  }\n\n  const handleFieldClick = (positionX: number, positionY: number) => {\n    if (user.hasAlreadyHit(positionX, positionY)) return\n\n    let userCopy: Player = Object.assign(\n      Object.create(Object.getPrototypeOf(user)),\n      user\n    )\n\n    let computerCopy: Player = Object.assign(\n      Object.create(Object.getPrototypeOf(computer)),\n      computer\n    )\n\n    let userGameboardCopy: Gameboard = Object.assign(\n      Object.create(Object.getPrototypeOf(userGameboard)),\n      userGameboard\n    )\n\n    let computerGameboardCopy: Gameboard = Object.assign(\n      Object.create(Object.getPrototypeOf(computerGameboard)),\n      computerGameboard\n    )\n\n    userCopy.attack(positionX, positionY, computerGameboardCopy)\n    setUser(userCopy)\n    setComputerGameboard(computerGameboardCopy)\n    if (computerGameboard.isGameOver()) {\n      setEndScreenMessage('You won')\n      setIsGameOver(true)\n      return\n    }\n\n    computerCopy.randomAttack(userGameboardCopy)\n    setComputer(computerCopy)\n    setUserGameboard(userGameboardCopy)\n    if (userGameboard.isGameOver()) {\n      setEndScreenMessage('Computer won')\n      setIsGameOver(true)\n      return\n    }\n  }\n\n  return (\n    <GameWrapper>\n      {hasGameStarted ? (\n        ''\n      ) : (\n        <StartScreen\n          gameboard={userGameboard}\n          setUserGameboard={setUserGameboard}\n          setHasGameStarted={setHasGameStarted}\n        />\n      )}\n      {isGameOver ? (\n        <EndScreen message={endScreenMessage} resetGame={resetGame} />\n      ) : (\n        ''\n      )}\n      <Boards>\n        <Board gameboard={userGameboard} owner={user} enemy={computer}></Board>\n        <Board\n          gameboard={computerGameboard}\n          owner={computer}\n          enemy={user}\n          onFieldClick={handleFieldClick}\n        ></Board>\n      </Boards>\n    </GameWrapper>\n  )\n}\n\nconst GameWrapper = styled.div`\n  margin-top: 5rem;\n  font-size: 5rem;\n\n  @media (max-width: 768px) {\n    margin-top: 0;\n  }\n`\nconst Boards = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5rem;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nexport default Game\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAII,MAAM,CAAC,MAAM,CAAC,CAAC;EACpD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAIG,SAAS,EAAE,CAAC;EACnE,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAII,MAAM,CAAC,UAAU,CAAC,CAAC;EAChE,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,IAAIG,SAAS,EAAE,CAAC;EAC3E,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdyB,sBAAsB,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,MAAM,GAAG,IAAIxB,SAAS,EAAE;IAC9BwB,MAAM,CAACC,kBAAkB,EAAE;IAC3BT,oBAAoB,CAACQ,MAAM,CAAC;EAC9B,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBhB,OAAO,CAAC,IAAIT,MAAM,CAAC,MAAM,CAAC,CAAC;IAC3BW,gBAAgB,CAAC,IAAIZ,SAAS,EAAE,CAAC;IACjCc,WAAW,CAAC,IAAIb,MAAM,CAAC,UAAU,CAAC,CAAC;IACnCsB,sBAAsB,EAAE;IACxBL,iBAAiB,CAAC,KAAK,CAAC;IACxBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAACC,SAAiB,EAAEC,SAAiB,KAAK;IACjE,IAAIpB,IAAI,CAACqB,aAAa,CAACF,SAAS,EAAEC,SAAS,CAAC,EAAE;IAE9C,IAAIE,QAAgB,GAAGC,MAAM,CAACC,MAAM,CAClCD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAAC1B,IAAI,CAAC,CAAC,EAC1CA,IAAI,CACL;IAED,IAAI2B,YAAoB,GAAGJ,MAAM,CAACC,MAAM,CACtCD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAACtB,QAAQ,CAAC,CAAC,EAC9CA,QAAQ,CACT;IAED,IAAIwB,iBAA4B,GAAGL,MAAM,CAACC,MAAM,CAC9CD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAACxB,aAAa,CAAC,CAAC,EACnDA,aAAa,CACd;IAED,IAAI2B,qBAAgC,GAAGN,MAAM,CAACC,MAAM,CAClDD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAACpB,iBAAiB,CAAC,CAAC,EACvDA,iBAAiB,CAClB;IAEDgB,QAAQ,CAACQ,MAAM,CAACX,SAAS,EAAEC,SAAS,EAAES,qBAAqB,CAAC;IAC5D5B,OAAO,CAACqB,QAAQ,CAAC;IACjBf,oBAAoB,CAACsB,qBAAqB,CAAC;IAC3C,IAAIvB,iBAAiB,CAACI,UAAU,EAAE,EAAE;MAClCG,mBAAmB,CAAC,SAAS,CAAC;MAC9BF,aAAa,CAAC,IAAI,CAAC;MACnB;IACF;IAEAgB,YAAY,CAACI,YAAY,CAACH,iBAAiB,CAAC;IAC5CvB,WAAW,CAACsB,YAAY,CAAC;IACzBxB,gBAAgB,CAACyB,iBAAiB,CAAC;IACnC,IAAI1B,aAAa,CAACQ,UAAU,EAAE,EAAE;MAC9BG,mBAAmB,CAAC,cAAc,CAAC;MACnCF,aAAa,CAAC,IAAI,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACEd,OAAA,CAACmC,WAAW;IAAAC,QAAA,GACTzB,cAAc,GACb,EAAE,gBAEFX,OAAA,CAACF,WAAW;MACVuC,SAAS,EAAEhC,aAAc;MACzBC,gBAAgB,EAAEA,gBAAiB;MACnCM,iBAAiB,EAAEA;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAExC,EACA5B,UAAU,gBACTb,OAAA,CAACH,SAAS;MAAC6C,OAAO,EAAE3B,gBAAiB;MAACK,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAE9D,EACD,eACDzC,OAAA,CAAC2C,MAAM;MAAAP,QAAA,gBACLpC,OAAA,CAACJ,KAAK;QAACyC,SAAS,EAAEhC,aAAc;QAACuC,KAAK,EAAEzC,IAAK;QAAC0C,KAAK,EAAEtC;MAAS;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACvEzC,OAAA,CAACJ,KAAK;QACJyC,SAAS,EAAE5B,iBAAkB;QAC7BmC,KAAK,EAAErC,QAAS;QAChBsC,KAAK,EAAE1C,IAAK;QACZ2C,YAAY,EAAEzB;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAElB,CAAC;AAAAvC,EAAA,CAjGKD,IAAI;AAAA8C,EAAA,GAAJ9C,IAAI;AAmGV,MAAMkC,WAAW,GAAG1C,MAAM,CAACuD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAPKd,WAAW;AAQjB,MAAMQ,MAAM,GAAGlD,MAAM,CAACuD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAE,GAAA,GATKP,MAAM;AAWZ,eAAe1C,IAAI;AAAA,IAAA8C,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}