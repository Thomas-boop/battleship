{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Documents/battleship-main/src/components/Game/StartScreen.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Ship from '../../factories/Ship';\nimport Button from '../elements/Button';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartScreen = _ref => {\n  _s();\n  let {\n    gameboard,\n    setUserGameboard,\n    setHasGameStarted\n  } = _ref;\n  const ships = [new Ship(5), new Ship(4), new Ship(3), new Ship(3), new Ship(2)];\n  const shipNames = ['Carrier', 'Battleship', 'Destroyer', 'Submarine', 'Patrol Boat'];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentShipName, setCurrentShipName] = useState(shipNames[0]);\n  const [currentShip, setCurrentShip] = useState(ships[0]);\n  const [isVertical, setIsVertical] = useState(false);\n  const toggleRotate = () => {\n    setIsVertical(!isVertical);\n  };\n  const onFieldClick = (row, column) => {\n    let gameboardCopy = Object.assign(Object.create(Object.getPrototypeOf(gameboard)), gameboard);\n    if (!gameboardCopy.isPlacementPossible(currentShip, row, column, isVertical)) {\n      return;\n    }\n    gameboardCopy.placeShip(currentShip, row, column, isVertical);\n    setUserGameboard(gameboardCopy);\n    // currentIndex updates after this method so we need to be 1 step ahead in all operations below\n    setCurrentIndex(currentIndex + 1);\n    setCurrentShip(ships[currentIndex + 1]);\n    setCurrentShipName(shipNames[currentIndex + 1]);\n    if (currentIndex > 3) {\n      setHasGameStarted(true);\n    }\n  };\n  const loadFields = () => {\n    const fields = [];\n    for (let row = 0; row < gameboard.board.length; row++) {\n      for (let column = 0; column < gameboard.board[row].length; column++) {\n        fields.push( /*#__PURE__*/_jsxDEV(Field, {\n          isFilled: gameboard.board[row][column] ? true : false,\n          onClick: () => onFieldClick(row, column),\n          children: /*#__PURE__*/_jsxDEV(FieldHover, {\n            shipLength: currentShip.length,\n            isVertical: isVertical\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return fields;\n  };\n  return /*#__PURE__*/_jsxDEV(StartScreenWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SetupWindow, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Welcome to battleship game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Place your \", /*#__PURE__*/_jsxDEV(\"u\", {\n          children: currentShipName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: 'Rotate',\n        onClick: toggleRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        children: loadFields()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(StartScreen, \"I7ImCENzAx7FNCvZKrMspJp0zOM=\");\n_c = StartScreen;\nconst StartScreenWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 3rem;\n`;\n_c2 = StartScreenWrapper;\nconst SetupWindow = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 50rem;\n  height: 80rem;\n  padding: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.padding.md;\n}};\n  background-color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.light.secondary;\n}};\n`;\n_c3 = SetupWindow;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 4rem);\n  grid-template-rows: repeat(10, 4rem);\n  width: 40.2rem;\n  height: 40.2rem;\n  border: 0.1rem solid ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.colors.dark.primary;\n}};\n`;\n_c4 = Board;\nconst Field = styled.div`\n  border: 0.1rem solid ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.colors.dark.primary;\n}};\n  cursor: pointer;\n\n  ${_ref6 => {\n  let {\n    isFilled\n  } = _ref6;\n  return isFilled && css`\n      background-color: ${_ref7 => {\n    let {\n      theme\n    } = _ref7;\n    return theme.colors.dark.secondary;\n  }};\n    `;\n}}\n`;\n_c5 = Field;\nconst FieldHover = styled.div`\n  position: relative;\n  height: 3.8rem;\n  width: 3.8rem;\n\n  &:hover {\n    background-color: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.colors.green;\n}};\n\n    ${_ref9 => {\n  let {\n    isVertical,\n    shipLength\n  } = _ref9;\n  return isVertical && css`\n        height: calc(3.8rem + 4rem * ${shipLength - 1});\n      `;\n}}\n\n    ${_ref10 => {\n  let {\n    isVertical,\n    shipLength\n  } = _ref10;\n  return !isVertical && css`\n        width: calc(3.8rem + 4rem * ${shipLength - 1}); ;\n      `;\n}}\n  }\n`;\n_c6 = FieldHover;\nconst Overlay = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  background-color: black;\n  opacity: 0.6;\n`;\n_c7 = Overlay;\nexport default StartScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StartScreen\");\n$RefreshReg$(_c2, \"StartScreenWrapper\");\n$RefreshReg$(_c3, \"SetupWindow\");\n$RefreshReg$(_c4, \"Board\");\n$RefreshReg$(_c5, \"Field\");\n$RefreshReg$(_c6, \"FieldHover\");\n$RefreshReg$(_c7, \"Overlay\");","map":{"version":3,"names":["useState","styled","css","Ship","Button","v4","uuidv4","jsxDEV","_jsxDEV","StartScreen","_ref","_s","gameboard","setUserGameboard","setHasGameStarted","ships","shipNames","currentIndex","setCurrentIndex","currentShipName","setCurrentShipName","currentShip","setCurrentShip","isVertical","setIsVertical","toggleRotate","onFieldClick","row","column","gameboardCopy","Object","assign","create","getPrototypeOf","isPlacementPossible","placeShip","loadFields","fields","board","length","push","Field","isFilled","onClick","children","FieldHover","shipLength","fileName","_jsxFileName","lineNumber","columnNumber","StartScreenWrapper","SetupWindow","content","Board","Overlay","_c","div","_c2","_ref2","theme","padding","md","_ref3","colors","light","secondary","_c3","_ref4","dark","primary","_c4","_ref5","_ref6","_ref7","_c5","_ref8","green","_ref9","_ref10","_c6","_c7","$RefreshReg$"],"sources":["/home/thomas/Documents/battleship-main/src/components/Game/StartScreen.tsx"],"sourcesContent":["import { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport Gameboard from '../../factories/Gameboard'\nimport Ship from '../../factories/Ship'\nimport Button from '../elements/Button'\nimport { v4 as uuidv4 } from 'uuid'\n\ninterface Props {\n  gameboard: Gameboard\n  setUserGameboard: (gameBoard: Gameboard) => void\n  setHasGameStarted: (hasGameStarted: boolean) => void\n}\n\nconst StartScreen = ({\n  gameboard,\n  setUserGameboard,\n  setHasGameStarted,\n}: Props) => {\n  const ships = [\n    new Ship(5),\n    new Ship(4),\n    new Ship(3),\n    new Ship(3),\n    new Ship(2),\n  ]\n\n  const shipNames = [\n    'Carrier',\n    'Battleship',\n    'Destroyer',\n    'Submarine',\n    'Patrol Boat',\n  ]\n\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [currentShipName, setCurrentShipName] = useState(shipNames[0])\n  const [currentShip, setCurrentShip] = useState(ships[0])\n  const [isVertical, setIsVertical] = useState(false)\n\n  const toggleRotate = () => {\n    setIsVertical(!isVertical)\n  }\n\n  const onFieldClick = (row: number, column: number) => {\n    let gameboardCopy: Gameboard = Object.assign(\n      Object.create(Object.getPrototypeOf(gameboard)),\n      gameboard\n    )\n\n    if (\n      !gameboardCopy.isPlacementPossible(currentShip, row, column, isVertical)\n    ) {\n      return\n    }\n\n    gameboardCopy.placeShip(currentShip, row, column, isVertical)\n    setUserGameboard(gameboardCopy)\n    // currentIndex updates after this method so we need to be 1 step ahead in all operations below\n    setCurrentIndex(currentIndex + 1)\n    setCurrentShip(ships[currentIndex + 1])\n    setCurrentShipName(shipNames[currentIndex + 1])\n\n    if (currentIndex > 3) {\n      setHasGameStarted(true)\n    }\n  }\n\n  const loadFields = () => {\n    const fields = []\n    for (let row = 0; row < gameboard.board.length; row++) {\n      for (let column = 0; column < gameboard.board[row].length; column++) {\n        fields.push(\n          <Field\n            key={uuidv4()}\n            isFilled={gameboard.board[row][column] ? true : false}\n            onClick={() => onFieldClick(row, column)}\n          >\n            <FieldHover\n              shipLength={currentShip.length}\n              isVertical={isVertical}\n            />\n          </Field>\n        )\n      }\n    }\n    return fields\n  }\n\n  return (\n    <StartScreenWrapper>\n      <SetupWindow>\n        <p>\n          <strong>Welcome to battleship game</strong>\n        </p>\n        <p>\n          Place your <u>{currentShipName}</u>\n        </p>\n        <Button content={'Rotate'} onClick={toggleRotate} />\n        <Board>{loadFields()}</Board>\n      </SetupWindow>\n      <Overlay />\n    </StartScreenWrapper>\n  )\n}\n\nconst StartScreenWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  font-size: 3rem;\n`\n\nconst SetupWindow = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  width: 50rem;\n  height: 80rem;\n  padding: ${({ theme }) => theme.padding.md};\n  background-color: ${({ theme }) => theme.colors.light.secondary};\n`\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 4rem);\n  grid-template-rows: repeat(10, 4rem);\n  width: 40.2rem;\n  height: 40.2rem;\n  border: 0.1rem solid ${({ theme }) => theme.colors.dark.primary};\n`\n\ninterface IField {\n  isFilled: boolean\n}\n\nconst Field = styled.div<IField>`\n  border: 0.1rem solid ${({ theme }) => theme.colors.dark.primary};\n  cursor: pointer;\n\n  ${({ isFilled }) =>\n    isFilled &&\n    css`\n      background-color: ${({ theme }) => theme.colors.dark.secondary};\n    `}\n`\n\ninterface IFieldHover {\n  shipLength: number\n  isVertical: boolean\n}\n\nconst FieldHover = styled.div<IFieldHover>`\n  position: relative;\n  height: 3.8rem;\n  width: 3.8rem;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.green};\n\n    ${({ isVertical, shipLength }) =>\n      isVertical &&\n      css`\n        height: calc(3.8rem + 4rem * ${shipLength - 1});\n      `}\n\n    ${({ isVertical, shipLength }) =>\n      !isVertical &&\n      css`\n        width: calc(3.8rem + 4rem * ${shipLength - 1}); ;\n      `}\n  }\n`\n\nconst Overlay = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  background-color: black;\n  opacity: 0.6;\n`\n\nexport default StartScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}